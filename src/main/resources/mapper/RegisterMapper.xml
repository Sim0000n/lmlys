<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="team.area237.lmlys.dao.RegisterDao">
    <select id="selectByUsername" resultType="String">
    select username from user where username = #{username}
    </select>
    <insert id="addUser">
    INSERT INTO user(username,password) VALUES(#{username},#{password})
    </insert>
    <resultMap id="UserDataResponse" type="team.area237.lmlys.model.response.UserDataResponse">
        <result column="email" jdbcType="VARCHAR" property="email"/>
        <result column="tel" jdbcType="VARCHAR" property="phone"/>
    </resultMap>

    <select id="dataSelectByUsername" resultMap="UserDataResponse">
    select email,tel from user where username = #{username}
    </select>

    <update id="updateBothByUsername">
    update user set tel=#{phone},email=#{email} where username=#{username}
    </update>

    <resultMap id="UserAddress" type="team.area237.lmlys.model.response.GetUserAddressResponse">
        <result column="province" jdbcType="VARCHAR" property="province"/>
        <result column="city" jdbcType="VARCHAR" property="city"/>
        <result column="detail_address" jdbcType="VARCHAR" property="home"/>
    </resultMap>
    <select id="selectReciver" resultType="String">
        select reciver_name from address where reciver_name=#{username}
    </select>
    <select id="selectAddressByUsername" resultMap="UserAddress">
    select province,city,detail_address from address where reciver_name =#{username}
    </select>
    <update id="updateAddressByUsername" parameterType="team.area237.lmlys.model.request.UploadUserAddressRequest">
        update address set province=#{address.province},city=#{address.city},detail_address=#{address.home}
        where reciver_name=#{username}
    </update>

    <insert id="insertAddressByUsername" parameterType="team.area237.lmlys.model.request.UploadUserAddressRequest">
    insert into address (province,city,detail_address,reciver_name) values (#{address.province},#{address.city},#{address.home},#{username})
    </insert>

    <select id="selectProvince" resultType="String">
    select province_name from province
    </select>

    <select id="citySelectByProvince" resultType="String">
    SELECT city_name FROM city INNER JOIN province ON city.province_codes=province.province_codes WhERE province.province_name=#{province}
    </select>

    <update id="cartToOrder">
    update orders set status=1 where username=#{username}
    </update>

    <select id="selectOrderByUsername" resultType="Integer">
    select id from orders where username = #{username} order by date desc
    </select>

    <resultMap id="ordersbyum" type="team.area237.lmlys.model.response.GetOrderResponse">
        <result column="goods_id" jdbcType="INTEGER" property="goodsID"/>
        <result column="goods_name" jdbcType="VARCHAR" property="goodsTitle"/>
        <result column="amount" jdbcType="INTEGER" property="count"/>
        <result column="date" jdbcType="DATE" property="time"/>
        <result column="status" jdbcType="VARCHAR" property="state"/>
        <result column="username" jdbcType="VARCHAR" property="user"/>
    </resultMap>

    <select id="selectOrderById" resultMap="ordersbyum">
    select orders.goods_id,goods.goods_name,amount,date,status,username from goods,orders
    where id=#{id} AND goods.goods_id=orders.goods_id
    </select>

    <resultMap id="stockbyum" type="team.area237.lmlys.model.entity.Cart">
        <result column="goods_id" jdbcType="INTEGER" property="goodsId"/>
        <result column="stock" jdbcType="INTEGER" property="stock"/>
        <result column="amount" jdbcType="INTEGER" property="count"/>
    </resultMap>
    <select id="selectStockByUsername" resultMap="stockbyum">
    select orders.goods_id,goods.stock,orders.amount from goods,orders
    where username=#{username} AND goods.goods_id=orders.goods_id
    </select>
    <update id="updateStockByGoodsId">
        update goods set stock = case
        <foreach collection="array" item="item" separator=" ">
            <if test="item.goodsId!=null and item.stock!=null">
                when goods_id=#{item.goodsId} then #{item.stock}
            </if>
        </foreach>
        end
        WHERE goods_id IN
        <foreach collection="array" item="item" index="index" open="(" close=")" separator=",">
            #{item.goodsId}
        </foreach>
    </update>

</mapper>